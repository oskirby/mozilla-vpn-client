{"mappings":"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","sources":["views/view-shell.js","node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition","node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Color.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ColorManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Dom.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/MouseZoneManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/BaseRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/CursorRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/CustomGlyphs.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/GridCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/LinkRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/Renderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/RendererUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/SelectionRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/TextRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/BaseCharAtlas.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/CharAtlasCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/CharAtlasUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/DynamicCharAtlas.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/LRUMap.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/SoundService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts","node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts","node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts","node_modules/xterm/lib/webpack:/xterm/src/common/TypedArrayUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/DirtyRowService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts","node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap","node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/universalModuleDefinition","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/src/FitAddon.ts","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/bootstrap","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/startup"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { Terminal } from 'xterm'\nimport { FitAddon } from 'xterm-addon-fit'\nimport { html, css, LitElement } from 'lit'\nimport { Client } from '../inspector/client'\nimport { CommandObserver } from '../inspector/CommandObserver'\n\nconst RED_ESCAPE = '\\x1B[0;31m'\nconst NO_COLOR_ESCAPE = '\\x1B[0m'\nconst NEWLINE = '\\r\\n'\n\nconst baseTheme = {\n  foreground: '#F8F8F8',\n  background: '#2D2E2C',\n  selection: '#5DA5D533',\n  black: '#1E1E1D',\n  brightBlack: '#262625',\n  red: '#CE5C5C',\n  brightRed: '#FF7272',\n  green: '#5BCC5B',\n  brightGreen: '#72FF72',\n  yellow: '#CCCC5B',\n  brightYellow: '#FFFF72',\n  blue: '#5D5DD3',\n  brightBlue: '#7279FF',\n  magenta: '#BC5ED1',\n  brightMagenta: '#E572FF',\n  cyan: '#5DA5D5',\n  brightCyan: '#72F0FF',\n  white: '#F8F8F8',\n  brightWhite: '#FFFFFF'\n}\n\nexport class ViewShell extends LitElement {\n  createRenderRoot () {\n    return this\n  }\n\n  connectedCallback () {\n    super.connectedCallback()\n    const terminal = new Terminal({\n      fontFamily: '\"Cascadia Code\", Menlo, monospace',\n      fontSize: '14',\n      lineHeight: 1,\n      theme: baseTheme,\n      cursorBlink: true,\n      rendererType: 'dom'\n    })\n    const fitAddon = new FitAddon()\n    this.terminal = terminal\n    this.fitAddon = fitAddon\n\n    terminal.loadAddon(fitAddon)\n    // Let Term Match Size\n    window.addEventListener('resize', () => {\n      this.fitAddon.fit()\n    })\n    terminal.open(this.term)\n    fitAddon.fit()\n\n    Client.connect().then((url) => {\n      this.terminal.writeln(`\\n\\rConnected to mozillaVPN@${url}`)\n      this.runCommand('help')\n      this.prompt()\n    })\n    Client.onAny((res) => this.processEvents(res))\n\n    CommandObserver.onAny(() => {\n      this.commandList = CommandObserver.commands\n    })\n\n    let command = ''\n    terminal.onData(e => {\n      switch (e) {\n        case '\\u0003': // Ctrl+C\n          console.log(terminal.getSelection())\n\n          break\n        case '\\r': // Enter\n          this.runCommand(command)\n          command = ''\n          break\n        case '\\u007F': // Backspace (DEL)\n          // Do not delete the prompt\n          if (terminal._core.buffer.x > 2) {\n            terminal.write('\\b \\b')\n            if (command.length > 0) {\n              command = command.substr(0, command.length - 1)\n            }\n          }\n          break\n        default: // Print all other characters for demo\n          if (e >= String.fromCharCode(0x20) && e <= String.fromCharCode(0x7B)) {\n            command += e\n            terminal.write(e)\n          }\n      }\n    })\n    terminal.onKey((key, event) => {\n      if (key.key === '\\u001b[A') {\n        // UP key ->\n        if (this.lastCommand != '') {\n          command = this.lastCommand\n          this.clearLine()\n          terminal.write(this.lastCommand)\n        }\n        return\n      }\n      if (key.key === '\\t') {\n        // Tab Pressed!\n        if (command === '') {\n          // No Command here!\n          terminal.writeln('')\n          terminal.write(this.commandList.join('  '))\n          this.prompt()\n          return\n        }\n        const closestCommands = this.commandList.filter(c => c.startsWith(command))\n        if (closestCommands.length > 1) {\n          terminal.writeln('')\n          terminal.write(closestCommands.join('  '))\n          this.prompt()\n          terminal.write(command)\n        } else if (closestCommands.length == 1) {\n          const newCommand = closestCommands.shift()\n          this.clearLine()\n          terminal.write(newCommand)\n          command = newCommand\n        }\n      }\n    })\n  }\n\n  runCommand (command) {\n    if (command === '') {\n      this.prompt()\n      return\n    }\n    if (command === 'clear') {\n      this.terminal.write('\\u001Bc')\n      this.prompt()\n      return\n    }\n    this.lastCommand = command\n    Client.sendCommand(command)\n    this.prompt()\n  }\n\n  prompt () {\n    this.terminal.write('\\n\\r$ ')\n  }\n\n  clearLine () {\n    this.terminal.write('\\x1b[2K\\r')\n    this.terminal.write('$ ')\n  }\n\n  processEvents (message) {\n    if (['screen_capture', 'log', 'network'].includes(message.type)) {\n      return\n    }\n    if (message.type == 'help') {\n      message.value = message.value.replaceAll('\\t', '\\n\\t')\n    }\n    this.writeResponse(message)\n  }\n\n  writeResponse (message) {\n    const type = message.type\n    let text = message.value\n    if (typeof text === 'object') {\n      text = JSON.stringify(text)\n    }\n\n    const error = message.error\n    if (!text && !error) {\n      return\n    }\n    this.terminal.write(NEWLINE + `client:(${type})` + NEWLINE)\n\n    if (error) {\n      this.terminal.write(`${NEWLINE}${RED_ESCAPE}${error}${NO_COLOR_ESCAPE}`)\n    } else {\n      this.terminal.write(text.replaceAll('\\n', '\\r\\n'))\n    }\n    this.terminal.write(NEWLINE)\n    this.prompt()\n  }\n\n  render () {\n    return html``\n  }\n\n  static styles = css`\n  :host{\n    display: none;\n  }\n\n  .terminal{\n    overflow:hidden;\n  }\n  `\n\n  get term () {\n    return this.parentElement\n  }\n}\ncustomElements.define('view-shell', ViewShell)\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'click', this._onClick.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    });\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _onClick(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedBufferChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.options.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IAnsiColorChangeEvent } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { ITerminalOptions as IInitializedTerminalOptions } from 'common/services/Services';\nimport { rgba } from 'browser/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): IInitializedTerminalOptions { return this.optionsService.options; }\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onAnsiColorChange((event) => this._changeAnsiColor(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  private _changeAnsiColor(event: IAnsiColorChangeEvent): void {\n    if (!this._colorManager) { return; }\n\n    for (const ansiColor of event.colors) {\n      const color = rgba.toColor(ansiColor.red, ansiColor.green, ansiColor.blue);\n\n      this._colorManager!.colors.ansi[ansiColor.colorIndex] = color;\n    }\n\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.options.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.options.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedBufferChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.element, this._mouseService, this._renderService);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        ev.preventDefault();\n        return this.cancel(ev);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!requestedEvents.wheel) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport!.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this.coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n    }, { passive: true }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (requestedEvents.wheel) return;\n      if (!this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (event.key === 'Dead' || event.key === 'AltGraph') {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    if (ev.data && ev.inputType === 'insertText' && !this.optionsService.options.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _lastHadScrollBar: boolean = false;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this._lastHadScrollBar = true;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    // Update scroll bar width\n    if (this._optionsService.options.scrollback === 0) {\n      this.scrollBarWidth = 0;\n    } else {\n      this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    }\n    this._lastHadScrollBar = this.scrollBarWidth > 0;\n\n    this._viewportElement.style.width = (this._renderService.dimensions.actualCellWidth * (this._bufferService.cols) + this.scrollBarWidth).toString() + 'px';\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the scroll bar visibility changed\n    if (this._lastHadScrollBar !== (this._optionsService.options.scrollback > 0)) {\n      this._refresh(immediate);\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n     * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n     * existing fillStyle on the context.\n     * @param x The column to fill.\n     * @param y The row to fill.\n     */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._scaledCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - cellOffset - window.devicePixelRatio,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'ideographic';\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.options.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'ideographic';\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.options.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n\n    this._ctx.restore();\n  }\n\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.options.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.options.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public dispose(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    super.dispose();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.options.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.substr(1, 2), 16);\n      g = parseInt(fillStyle.substr(3, 2), 16);\n      b = parseInt(fillStyle.substr(5, 2), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.substr(7, 2), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset;\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline() || cell.isStrikethrough()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        if (cell.isStrikethrough()) {\n          this._fillMiddleLineAtCells(x, y, cell.getWidth());\n        }\n        if (cell.isUnderline()) {\n          this._fillBottomLineAtCells(x, y, cell.getWidth());\n        }\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: colors.ansi\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'ideographic';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    let imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // If this charcater is underscore and empty, shift it up until it is visible, try for a maximum\n    // of 5 pixels.\n    if (isEmpty && glyph.chars === '_' && !this._config.allowTransparency) {\n      for (let offset = 1; offset <= 5; offset++) {\n        // Draw the character\n        this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight - offset);\n\n        // clear the background from the character to avoid issues with drawing over the previous\n        // character if it extends past it's bounds\n        imageData = this._tmpCtx.getImageData(\n          0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n        );\n        isEmpty = clearColor(imageData, backgroundColor);\n        if (!isEmpty) {\n          break;\n        }\n      }\n    }\n\n    this._tmpCtx.restore();\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e));\n\n    this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.options.fontFamily};` +\n      ` font-size: ${this._optionsService.options.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.options.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.options.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionTransparent.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.options.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.options.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerService._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedBufferChange(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(e => this._fullRefresh()));\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRender.fire({ start, end });\n    }\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedBufferChange: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ITerminalOptions, IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n\n  constructor(\n    options: ITerminalOptions\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.options.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.options.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IAnsiColorChangeEvent, IParseStack } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onAnsiColorChange = new EventEmitter<IAnsiColorChangeEvent>();\n  public get onAnsiColorChange(): IEvent<IAnsiColorChangeEvent> { return this._onAnsiColorChange.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setAnsiColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.options.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n          && this._activeBuffer.y > this._activeBuffer.scrollTop\n          && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n          && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped)\n      {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  protected _parseAnsiColorChange(data: string): IAnsiColorChangeEvent | null {\n    const result: IAnsiColorChangeEvent = { colors: [] };\n    // example data: 5;rgb:aa/bb/cc\n    const regex = /(\\d+);rgb:([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})/gi;\n    let match;\n\n    while ((match = regex.exec(data)) !== null) {\n      result.colors.push({\n        colorIndex: parseInt(match[1]),\n        red: parseInt(match[2], 16),\n        green: parseInt(match[3], 16),\n        blue: parseInt(match[4], 16)\n      });\n    }\n\n    if (result.colors.length === 0) {\n      return null;\n    }\n\n    return result;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. `spec` color format is 'rgb:hh/hh/hh' where `h` are hexadecimal digits.\n   * There may be multipe c ; spec elements present in the same instruction, e.g. 1;rgb:10/20/30;2;rgb:a0/b0/c0.\n   */\n  public setAnsiColor(data: string): boolean {\n    const event = this._parseAnsiColorChange(data);\n    if (event) {\n      this._onAnsiColorChange.fire(event);\n    }\n    else {\n      this._logService.warn(`Expected format <num>;rgb:<rr>/<gg>/<bb> but got data: ${data}`);\n    }\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.options.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n});\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    for (const k of Object.keys(options)) {\n      if (k in this.options) {\n        try {\n          const newValue = options[k as keyof IPartialTerminalOptions] as any;\n          this.options[k] = this._sanitizeAndValidateOption(k, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(key)) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  altClickMovesCursor?: boolean;\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  cursorWidth?: number;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n  windowOptions?: IWindowOptions;\n}\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.options.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    if (core._renderService.dimensions.actualCellWidth === 0 || core._renderService.dimensions.actualCellHeight === 0) {\n      return undefined;\n    }\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - core.viewport.scrollBarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(775);\n"],"names":["$c4874ee0dde31fc5$var$NEWLINE","$c4874ee0dde31fc5$var$baseTheme","foreground","background","selection","black","brightBlack","red","brightRed","green","brightGreen","yellow","brightYellow","blue","brightBlue","magenta","brightMagenta","cyan","brightCyan","white","brightWhite","$c4874ee0dde31fc5$export$b81977eba3969224","$aD10K","LitElement","createRenderRoot","this","connectedCallback","super","terminal","$9NYKQ","Terminal","fontFamily","fontSize","lineHeight","theme","cursorBlink","rendererType","fitAddon","$82lk5","FitAddon","loadAddon","window","addEventListener","fit","open","term","$cud2N","Client","connect","then","url","writeln","runCommand","prompt","onAny","res","processEvents","$fvkUK","CommandObserver","commandList","commands","command","onData","e","console","log","getSelection","_core","buffer","x","write","length","substr","String","fromCharCode","onKey","key","event","join","closestCommands","filter","c","startsWith","newCommand","shift","clearLine","lastCommand","sendCommand","message","includes","type","value","replaceAll","writeResponse","text","JSON","stringify","error","render","html","css","root","factory","exports","module","define","amd","a","i","self","o","r","s","l","h","u","f","t","_terminal","_renderService","call","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","_onKey","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","n","prototype","dispose","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","actualCellHeight","style","height","Disposable","AccessibilityManager","prepareTextForTerminal","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","copyHandler","selectionService","clipboardData","setData","selectionText","handlePasteEvent","stopPropagation","getData","rightClickHandler","shouldSelectWord","rightClickSelect","select","channels","rgb","rgba","toPaddedHex","contrastRatio","l1","l2","toCss","g","b","toRgba","color","blend","bg","fg","fgR","fgG","fgB","bgR","bgG","bgB","Math","round","isOpaque","ensureContrastRatio","ratio","result","toColor","opaque","rgbaColor","toChannels","opacity","parseInt","slice","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","max","ceil","increaseLuminance","min","bgL","fgL","_color","_rgba","clear","setCss","getCss","setColor","getColor","ColorContrastCache","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","cursor","cursorAccent","selectionTransparent","selectionOpaque","ansi","contrastCache","onOptionsChange","setTheme","_parseColor","fallback","fillStyle","warn","fillRect","data","getImageData","substring","split","map","component","Number","alpha","ColorManager","arguments","elements","parentElement","node","handler","options","disposed","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","defineProperty","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","clearAll","_rowsTimeoutId","clearTimeout","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","cols","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","regex","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","indexOf","lastIndex","bufferIndex","stringIndexToBufferIndex","line","get","attr","getFg","isValid","_addLink","exec","y","getStringCellWidth","x1","y1","floor","x2","y2","MouseZone","newWindow","opener","location","href","fire","_createLinkHoverEvent","remove","IBufferService","ILogService","IUnicodeService","clickCallback","hoverCallback","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","_currentLink","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_onClick","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedBufferChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","Linkifier2","promptLabel","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","undefined","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","_renderCallback","_animationFrame","cancelAnimationFrame","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","RenderDebouncer","apply","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","_","d","p","m","S","C","w","L","E","M","k","A","R","T","B","O","browser","Browser","_keyDownHandled","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onAnsiColorChange","_changeAnsiColor","forwardEvent","onCursorMove","onTitleChange","_afterResize","optionsService","_colorManager","ansiColor","colorIndex","setColors","viewport","onThemeChange","_isDisposed","_customKeyEventHandler","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","sendFocus","C0","ESC","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","actualCellWidth","cursorTop","cursorLeft","_initGlobal","_bindKeys","hasSelection","pasteHandlerWrapper","isFirefox","button","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","setService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","RenderService","IRenderService","resize","_compositionView","CompositionHelper","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","bindMouse","Renderer","DomRenderer","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","normal","column","setSelection","getSelectionPosition","startColumn","selectionStart","endColumn","selectionEnd","clearSelection","selectAll","selectLines","keydown","scrollToBottom","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","ETX","CR","domEvent","thirdLevelKey","metaKey","isWindows","getModifierState","keyCode","charCode","which","inputType","_soundBell","playBellSound","hasValidSize","getBlankLine","DEFAULT_ATTR_DATA","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_currentScaledCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_lastHadScrollBar","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","scrollback","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","colCount","hasValidCharSize","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","isWrapped","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","moveToCellSequence","targetX","rowDifference","currX","_container","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","code","bold","dim","italic","_canvas","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillMiddleLineAtCells","cellOffset","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","_clipRow","drawSuccess","customGlyphs","tryDrawCustomChar","getChars","fillText","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","getCode","WHITESPACE_CELL_CODE","isDim","isItalic","draw","fgOverride","save","AttributeData","toColorRGB","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","minimumContrastRatio","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","inverse","BaseRenderLayer","BLINK_INTERVAL","container","rendererId","_onRequestRedraw","_coreBrowserService","_cell","CellData","_state","isFocused","_cursorRenderers","bar","_renderBarCursor","block","_renderBlockCursor","_renderUnderlineCursor","_cursorBlinkStateManager","_clearCursor","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","loadCell","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","CursorRenderLayer","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","wt","blockElementDefinitions","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","D","P","I","H","F","W","U","q","N","z","K","V","G","X","Y","Z","J","$","Q","ee","te","re","ie","ne","oe","se","ae","ce","le","he","ue","fe","_e","de","pe","ve","ge","ye","me","Se","Ce","be","we","Le","Ee","xe","Me","ke","Ae","Re","Te","Be","De","Oe","Pe","Ie","He","Fe","je","We","Ue","qe","Ne","ze","Ke","Ve","Ge","Xe","Ye","Ze","Je","$e","Qe","et","tt","rt","it","nt","ot","st","at","ct","lt","ht","ut","ft","_t","dt","pt","vt","yt","charDefinition","yOffset","mt","patternSet","cachedPatterns","Ct","bt","tmpCanvas","ImageData","Lt","Et","parseFloat","imageData","putImageData","pattern","createPattern","xOffset","entries","instructions","instruction","args","stroke","closePath","boxDrawingDefinition","clamp","svgToCanvasInstructionMap","bezierCurveTo","lineTo","moveTo","kt","translateArgs","xt","cache","Reflect","decorate","onShowLinkUnderline","onHideLinkUnderline","__param","is256Color","LinkRenderLayer","instantiationService","nextRendererId","_renderLayers","TextRenderLayer","_id","SelectionRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","IInstantiationService","_clearState","_didStateChange","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","viewportStartRow","_areCoordinatesEqual","coord1","coord2","_characterWidth","_characterFont","_characterOverlapCache","_workCell","GridCache","terminalFont","_forEachCell","firstRow","lastRow","getJoinedCharacters","isJoined","lastCharX","JoinedCellData","translateToString","_isOverlapping","getCodePoint","NULL_CELL_CODE","callback","_drawBackground","nextFillStyle","isBgPalette","prevFillStyle","_drawForeground","isInvisible","isUnderline","isStrikethrough","beginFrame","hasOwnProperty","measureText","overlaps","_didWarmUp","_doWarmUp","BaseCharAtlas","generateConfig","charAtlasCache","ownedBy","configEquals","newConfig","atlas","entry","config","newEntry","DynamicCharAtlas","clonedColors","CHAR_ATLAS_CELL_SPACING","TRANSPARENT_COLOR","TypeError","glyph","constructor","create","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","_tmpCtx","_width","_height","_cacheMap","LRUMap","prealloc","capacity","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","cacheX","cacheY","drawImage","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","fontStyle","isEmpty","offset","inBitmap","_addGlyphToBitmap","isSafari","_generateBitmap","createImageBitmap","bitmap","NoneCharAtlas","_map","_head","_tail","_unlinkNode","prev","_appendNode","tail","_nodePool","nodePool","head","peekValue","BG_CLASS_PREFIX","FOCUS_CLASS","_linkifier","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_linkifier2","TERMINAL_CLASS_PREFIX","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","FG_CLASS_PREFIX","_createSelectionElement","middleRowsCount","colStart","colEnd","createRow","_setCellUnderline","span","textDecoration","enumerable","configurable","DIM_CLASS","ITALIC_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","joinedRanges","charElement","display","isCursorRow","_applyMinimumContrast","_addStyle","padStart","isSelectAllActive","selectionStartLength","SelectionModel","areSelectionValuesReversed","startPlusLength","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","combinedData","firstCell","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","rangeStartColumn","currentStringIndex","getTrimmedLength","rangeAttrBG","_getJoinedRanges","lineStr","ranges","rangeStartStringIndex","rangeAttrFG","getBg","startIndex","endIndex","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeStarted","currentRangeIndex","currentRange","getString","newRange","inRange","getRootNode","activeElement","hasFocus","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","_fullRefresh","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","disconnect","observe","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","changeOptions","NON_BREAKING_SPACE_CHAR","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseUpListener","onUserInput","_trimListener","_onBufferActivate","_activeSelectionMode","_onMouseUp","_onTrim","_model","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","startRowEndCol","ALL_NON_BREAKING_SPACE_REGEX","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAtCursor","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","_selectToWordAt","getOption","coordinates","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesBelow","leftLongCharOffset","charAt","leftWideCharCount","rightWideCharCount","_isCharWordSeparator","rightLongCharOffset","charOffset","trim","previousBufferLine","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","getWrappedRangeForLine","createDecorator","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","base64","atob","len","binaryString","Uint8Array","bytes","charCodeAt","dataURI","destination","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","_maxLength","_startIndex","_length","n1","Array","newMaxLength","_getCyclicIndex","newArray","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","val","depth","isArray","clone","clonedObject","_onBinary","_onData","_onLineFeed","InstantiationService","OptionsService","BufferService","LogService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","_charsetService","CharsetService","InputHandler","onBinary","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","_onScrollApi","_windowsMode","writeSync","LogLevelEnum","hasWriteSyncWarnHappened","isNaN","MINIMUM_COLS","MINIMUM_ROWS","eraseAttr","scroll","WARN","pageCount","scrollPages","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","ident","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg2","queue","from","MAX_PARSEBUFFER_LENGTH","opts","setWinLines","restoreWin","setWinPosition","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","params","concat","utf32ToString","put","_parser","EscapeSequenceParser","_coreMouseService","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_parseBuffer","_onRequestReset","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onAnsiColorChange","_parseStack","cursorStartX","cursorStartY","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","decodedLength","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","insertChars","intermediates","scrollLeft","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","scrollDown","eraseChars","cursorBackwardTab","deleteChars","charPosAbsolute","scrollUp","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","hVPosition","tabClear","setMode","vPositionRelative","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","lineFeed","VT","carriageReturn","BS","backspace","LF","tab","SO","shiftOut","SI","shiftIn","IND","NEL","nextLine","HTS","tabSet","OscHandler","setIconName","setTitle","C1","setAnsiColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","_onA11yTab","_preserveStack","_logSlowResolvingAsync","Promise","race","catch","err","parse","paused","clearRange","decode","subarray","wasPaused","print","chWidth","wraparoundMode","wraparound","modes","insertMode","markDirty","bufferRow","setCellFromCodePoint","curAttr","wcwidth","charset","ch","stringFromCodePoint","extended","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","convertEol","reverseWraparound","_restrictCursor","nextStop","maxCol","origin","_setCursor","_moveCursor","cursorUp","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","scrollBackSize","deleteCells","_is","termName","setModePrivate","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","c1","c3","mode","cSpace","advance","getSubParams","accu","underlineColor","_processUnderline","underlineStyle","updateExtended","hasSubParams","_extractColor","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","_parseAnsiColorChange","collectAndFlag","level","fill","markAllDirty","_disposables","unregister","disposables","array","navigator","userAgent","platform","isIpad","isIphone","test","lastChar","CHAR_DATA_CODE_INDEX","ExtendedAttrs","fromColorRGB","newObj","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","BufferLine","maxLength","relativeY","correctBufferLength","fillViewportRows","fillAttr","newCols","nullCell","newRows","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","wrappedLines","absoluteY","destLineLengths","reflowSmallerGetNewLineLengths","trimmedLines","linesToAdd","newLines","newLine","countToInsert","destLineIndex","srcLineIndex","srcCol","copyCellsFrom","cellsToCopy","destCol","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","viewportAdjustments","toInsert","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","nextI","insertEvents","countInsertedSoFar","insertCountEmitted","lineIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","last","tabStopWidth","marker","Marker","onTrim","onInsert","onDelete","onDispose","_removeMarker","endOverscan","BufferStringIterator","Buffer","_startOverscan","_endIndex","_buffer","_endOverscan","_trimRight","_current","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","eAttrs","codePoint","fillCellData","keys","copyFrom","applyInReverse","srcCombinedKeys","bufferCols","bufferAbsoluteY","srcTrimmedTineLength","countToRemove","nextToRemoveIndex","countRemovedSoFar","nextToRemoveStart","newLayout","newLayoutLines","oldCols","newLineLengths","cellsNeeded","reduce","cellsAvailable","oldTrimmedLength","srcLine","lineLength","BufferSet","_normal","inactiveBuffer","_alt","obj","combined","DEFAULT_ATTR","isDisposed","_onDispose","_nextId","NUL","SOH","STX","EOT","ACK","BEL","HT","DLE","DC1","DC2","DC3","NAK","SYN","ETB","CAN","EM","SUB","SP","DEL","PAD","HOP","BPH","NBH","HTJ","VTS","PLU","SS2","SS3","PU1","PU2","STS","CCH","MW","SPA","EPA","ENQ","SOS","SGCI","SCI","CSI","ST","OSC","FF","KEYCODE_KEY_MAPPINGS","48","50","FS","51","RS","52","US","53","56","57","186","187","188","SSA","189","ESA","190","191","192","PLD","RI","220","221","DCS","222","applicationCursorMode","modifiers","keyMapping","GS","codepoint","_interim","startPos","interim","byte3","tmp","missing","discardInterim","fourStop","byte2","byte4","byte1","table","BMP_COMBINING","UnicodeV6","version","ucs","mid","HIGH_COMBINING","num","queueMicrotask","cb","resolve","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","maxSubsequentCalls","chunk","_innerWrite","lastTime","startTime","qmt","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","_ident","_handlerFb","loopPosition","fallThrough","_active","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","_stack","unhook","success","handlerResult","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","setPrototypeOf","__proto__","setDefault","addMany","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","EXECUTABLES","states","PRINTABLES","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_start","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","values","newParams","getSubParamsAll","store","cur","_addons","loadedAddon","instance","_wrappedAddonDispose","AddonManager","init","BufferApiView","getLine","BufferLineApiView","_line","getCell","_onBufferChange","_alternate","BufferNamespaceApi","alternate","addCsiHandler","addDcsHandler","ParserApi","addEscHandler","addOscHandler","provider","versions","activeVersion","UnicodeApi","__decorate","isUserScrolling","_cachedBlankLine","bottomRow","willBufferBeTrimmed","isFull","scrollRegionHeight","oldYdisp","scrollAmount","glevel","_charsets","NONE","restrict","X10","ANY","isSGR","DEFAULT","SGR","eventCode","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","DEFAULT_ENCODINGS","protocol","name","encoding","_compareEvents","triggerBinaryEvent","report","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","disableStdin","CoreService","_end","_entries","__spreadArray","ServiceCollection","_services","getService","ctor","getServiceDependencies","sort","dependency","service","serviceDependencies","firstServiceArgPos","DEBUG","info","INFO","ERROR","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","off","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","allowProposedApi","altClickMovesCursor","_onOptionChange","_sanitizeAndValidateOption","setOption","storeServiceDependency","serviceRegistry","decorator","di$target","ICharsetService","_providers","defaultProvider","_activeProvider","_onChange","moduleId","__webpack_module_cache__","__webpack_modules__","__webpack_require__","_addonManager","_checkProposedApi","r1","onBell","i1","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","_verifyIntegers","columns","registerMarker","writeUtf8","addon","dims","proposeDimensions","core","parentElementStyle","getComputedStyle","parentElementHeight","getPropertyValue","parentElementWidth","elementStyle","availableHeight","availableWidth"],"version":3,"file":"view-shell.a6d6c5c7.js.map"}